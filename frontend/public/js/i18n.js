// === –¶–ï–ù–¢–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ò–ù–¢–ï–†–ù–ê–¶–ò–û–ù–ê–õ–ò–ó–ê–¶–ò–ò ===
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö —Å–∞–π—Ç–∞ –¥–ª—è –¥–≤—É—è–∑—ã—á–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (RU/EN)

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
let currentLanguage = 'ru'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π

// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
const supportedLanguages = ['ru', 'en'];

// === –°–õ–û–í–ê–†–¨ –ü–ï–†–ï–í–û–î–û–í ===
const translations = {
    // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    'nav.home': { ru: '–ì–ª–∞–≤–Ω–∞—è', en: 'Home' },
    'nav.tours': { ru: '–¢—É—Ä—ã', en: 'Tours' },
    'nav.hotels': { ru: '–û—Ç–µ–ª–∏', en: 'Hotels' },
    'nav.visa_support': { ru: '–í–∏–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', en: 'Visa Support' },
    'nav.tour_agents': { ru: '–¢—É—Ä–∞–≥–µ–Ω—Ç–∞–º', en: 'For Tour Agents' },
    'nav.about': { ru: '–û –Ω–∞—Å', en: 'About Us' },
    'nav.reviews': { ru: '–û—Ç–∑—ã–≤—ã', en: 'Reviews' },
    'nav.blog': { ru: '–ë–ª–æ–≥', en: 'Blog' },
    'nav.contacts': { ru: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', en: 'Contacts' },
    
    // –ö–Ω–æ–ø–∫–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è
    'btn.book_now': { ru: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', en: 'Book Now' },
    'btn.more_details': { ru: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ', en: 'More Details' },
    'btn.view_all': { ru: '–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ', en: 'View All' },
    'btn.send': { ru: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å', en: 'Send' },
    'btn.search': { ru: '–ü–æ–∏—Å–∫', en: 'Search' },
    'btn.filter': { ru: '–§–∏–ª—å—Ç—Ä', en: 'Filter' },
    'btn.contact_us': { ru: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', en: 'Contact Us' },
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏
    'title.popular_tours': { ru: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä—ã', en: 'Popular Tours' },
    'title.recommended_tours': { ru: '–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã –ø–æ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏', en: 'Recommended Central Asia Tours' },
    'title.tajikistan_tours': { ru: '–¢—É—Ä—ã –ø–æ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω—É', en: 'Tajikistan Tours' },
    'title.uzbekistan_tours': { ru: '–¢—É—Ä—ã –ø–æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É', en: 'Uzbekistan Tours' },
    'title.kyrgyzstan_tours': { ru: '–¢—É—Ä—ã –ø–æ –ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω—É', en: 'Kyrgyzstan Tours' },
    'title.turkmenistan_tours': { ru: '–¢—É—Ä—ã –ø–æ –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω—É', en: 'Turkmenistan Tours' },
    'title.tours_by_cities': { ru: '–¢—É—Ä—ã –ø–æ –≥–æ—Ä–æ–¥–∞–º', en: 'Tours by Cities' },
    'title.find_perfect_tour': { ru: '–ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç—É—Ä', en: 'Find the Perfect Tour' },
    'title.free_cancellation': { ru: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ç–º–µ–Ω–∞', en: 'Free Cancellation' },
    'title.book_now_pay_later': { ru: '–ë—Ä–æ–Ω–∏—Ä—É–π —Å–µ–π—á–∞—Å - –ø–ª–∞—Ç–∏ –ø–æ—Ç–æ–º', en: 'Book Now - Pay Later' },
    'title.hot_tours': { ru: '–ì–æ—Ä—è—â–∏–µ —Ç—É—Ä—ã', en: 'Hot Tours' },
    'title.promotions': { ru: '–ê–∫—Ü–∏–∏', en: 'Promotions' },
    'title.search_results': { ru: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞', en: 'Search Results' },
    'title.our_services': { ru: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏', en: 'Our Services' },
    'title.why_choose_us': { ru: '–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å', en: 'Why Choose Us' },
    
    // –¶–µ–Ω–æ–≤—ã–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è
    'price.from': { ru: '–¶–µ–Ω–∞ –æ—Ç:', en: 'Price from:' },
    'price.per_person': { ru: '–∑–∞ —á–µ–ª–æ–≤–µ–∫–∞', en: 'per person' },
    'price.per_group': { ru: '–∑–∞ –≥—Ä—É–ø–ø—É', en: 'per group' },
    'price.days': { ru: '–¥–Ω–µ–π', en: 'days' },
    'price.day': { ru: '–¥–µ–Ω—å', en: 'day' },
    
    // –§–æ—Ä–º—ã –∏ –ø–æ–ª—è
    'form.name': { ru: '–ò–º—è', en: 'Name' },
    'form.email': { ru: 'Email', en: 'Email' },
    'form.phone': { ru: '–¢–µ–ª–µ—Ñ–æ–Ω', en: 'Phone' },
    'form.message': { ru: '–°–æ–æ–±—â–µ–Ω–∏–µ', en: 'Message' },
    'form.check_in': { ru: '–ó–∞–µ–∑–¥', en: 'Check-in' },
    'form.check_out': { ru: '–í—ã–µ–∑–¥', en: 'Check-out' },
    'form.guests': { ru: '–ì–æ—Å—Ç–µ–π', en: 'Guests' },
    'form.select_country': { ru: '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É', en: 'Select Country' },
    'form.select_city': { ru: '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', en: 'Select City' },
    'form.select_type': { ru: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø', en: 'Select Type' },
    
    // –£—Å–ª—É–≥–∏
    'service.tours': { ru: '–¢—É—Ä—ã –∏ —ç–∫—Å–∫—É—Ä—Å–∏–∏', en: 'Tours & Excursions' },
    'service.transfer': { ru: '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä', en: 'Transfer Service' },
    'service.guide': { ru: '–ì–∏–¥-—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ', en: 'Guide Service' },
    'service.agency': { ru: '–¢—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ', en: 'Travel Agency' },
    
    // –ü–æ–¥–≤–∞–ª —Å–∞–π—Ç–∞
    'footer.contact_info': { ru: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', en: 'Contact Information' },
    'footer.quick_links': { ru: '–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏', en: 'Quick Links' },
    'footer.social_media': { ru: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', en: 'Social Media' },
    'footer.copyright': { ru: '¬© 2024 Bunyod-Tour. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.', en: '¬© 2024 Bunyod-Tour. All rights reserved.' },
    
    // –§–∏–ª—å—Ç—Ä—ã
    'filter.country': { ru: '–°—Ç—Ä–∞–Ω–∞', en: 'Country' },
    'filter.city': { ru: '–ì–æ—Ä–æ–¥', en: 'City' },
    'filter.tour_type': { ru: '–¢–∏–ø —Ç—É—Ä–∞', en: 'Tour Type' },
    'filter.category': { ru: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', en: 'Category' },
    'filter.date': { ru: '–î–∞—Ç–∞', en: 'Date' },
    
    // –û–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    'common.loading': { ru: '–ó–∞–≥—Ä—É–∑–∫–∞...', en: 'Loading...' },
    'common.no_results': { ru: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', en: 'No results found' },
    'common.error': { ru: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', en: 'An error occurred' },
    'common.success': { ru: '–£—Å–ø–µ—à–Ω–æ!', en: 'Success!' },
    'common.show_all_tours': { ru: '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç—É—Ä—ã', en: 'Show All Tours' },
    'common.clear_search': { ru: '–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫', en: 'Clear Search' },
    
    // Placeholders –¥–ª—è —Ñ–æ—Ä–º –∏ –ø–æ–∏—Å–∫–∞
    'placeholder.search_tours': { ru: '–ü–æ–∏—Å–∫ —Ç—É—Ä–æ–≤...', en: 'Search tours...' },
    'placeholder.select_date': { ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É', en: 'Select date' },
    'placeholder.enter_name': { ru: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è', en: 'Enter your name' },
    'placeholder.enter_email': { ru: '–í–≤–µ–¥–∏—Ç–µ email', en: 'Enter email' },
    'placeholder.enter_phone': { ru: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω', en: 'Enter phone' },
    'placeholder.enter_message': { ru: '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', en: 'Enter message' },
    
    // Title –∞—Ç—Ä–∏–±—É—Ç—ã (–≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏)
    'title.language_switcher': { ru: '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫', en: 'Switch language' },
    'title.currency_switcher': { ru: '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∞–ª—é—Ç—É', en: 'Switch currency' },
    'title.search_button': { ru: '–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫', en: 'Start search' },
    'title.filter_button': { ru: '–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã', en: 'Apply filters' },
    'title.book_tour': { ru: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä', en: 'Book tour' },
    'title.view_details': { ru: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏', en: 'View details' }
};

// === –§–£–ù–ö–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ü–ï–†–ï–í–û–î–ê ===
function getTranslation(key, lang = currentLanguage) {
    if (translations[key] && translations[key][lang]) {
        return translations[key][lang];
    }
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä—É—Å—Å–∫–∏–π –∫–∞–∫ fallback
    if (translations[key] && translations[key]['ru']) {
        return translations[key]['ru'];
    }
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–æ–æ–±—â–µ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª—é—á
    return key;
}

// === –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø –Ø–ó–´–ö–ê ===
function switchSiteLanguage(lang) {
    // üîí –í–ê–õ–ò–î–ê–¶–ò–Ø –í–•–û–î–ù–´–• –î–ê–ù–ù–´–•
    if (!lang || typeof lang !== 'string') {
        console.warn('‚ö†Ô∏è –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —è–∑—ã–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
        lang = 'ru';
    }
    
    if (!supportedLanguages.includes(lang)) {
        console.warn(`‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫ "${lang}", –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π`);
        lang = 'ru';
    }
    
    console.log(`üåê –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞: ${lang}`);
    
    // üíæ –ë–ï–ó–û–ü–ê–°–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï –í LOCALSTORAGE
    try {
        localStorage.setItem('selectedLanguage', lang);
        console.log(`üíæ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ localStorage: ${lang}`);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
    }
    
    currentLanguage = lang;
    
    // üîÑ –û–ë–ù–û–í–õ–Ø–ï–ú –í–°–ï –≠–õ–ï–ú–ï–ù–¢–´ –ò–ù–¢–ï–†–§–ï–ô–°–ê
    updateLanguageSelector(lang);
    translateStaticInterface(lang);
    
    // üéØ –û–ë–ù–û–í–õ–Ø–ï–ú HTML LANG –ê–¢–†–ò–ë–£–¢
    document.documentElement.lang = lang;
    
    // üì± –ó–ê–ö–†–´–í–ê–ï–ú DROPDOWN –ë–ï–ó–û–ü–ê–°–ù–û
    const dropdown = document.getElementById('langDropdown');
    const arrow = document.querySelector('.dropdown-arrow');
    
    if (dropdown) dropdown.classList.remove('show');
    if (arrow) arrow.classList.remove('open');
    
    console.log(`‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞: ${lang}`);
}

// === –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–Ø –Ø–ó–´–ö–û–í ===
function updateLanguageSelector(lang) {
    const languages = {
        'ru': { name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫', flagClass: 'flag-ru' },
        'en': { name: 'English', flag: 'üá∫üá∏', flagClass: 'flag-us' }
    };
    
    const selectedLang = languages[lang];
    if (!selectedLang) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    const selectedFlag = document.querySelector('.selected-flag');
    const selectedLangText = document.querySelector('.selected-lang');
    
    if (selectedFlag) {
        selectedFlag.textContent = selectedLang.flag;
        selectedFlag.className = `selected-flag ${selectedLang.flagClass}`;
    }
    
    if (selectedLangText) {
        selectedLangText.textContent = selectedLang.name;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –æ–ø—Ü–∏—é –≤ dropdown
    document.querySelectorAll('.lang-option').forEach(option => {
        option.classList.remove('active');
        if (option.dataset.lang === lang) {
            option.classList.add('active');
        }
    });
}

// === –£–°–ò–õ–ï–ù–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –Ø–ó–´–ö–ê ===
function initializeLanguage() {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...');
    
    let savedLanguage = 'ru'; // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    // üîí –ë–ï–ó–û–ü–ê–°–ù–û–ï –ß–¢–ï–ù–ò–ï –ò–ó LOCALSTORAGE
    try {
        const stored = localStorage.getItem('selectedLanguage');
        console.log(`üíæ –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —è–∑—ã–∫: ${stored}`);
        
        // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if (stored && supportedLanguages.includes(stored)) {
            savedLanguage = stored;
            console.log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —è–∑—ã–∫: ${savedLanguage}`);
        } else {
            console.warn(`‚ö†Ô∏è –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ "${stored}", –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`);
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤ localStorage
            localStorage.setItem('selectedLanguage', 'ru');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage:', error);
        console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }
    
    // üéØ –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –Ø–ó–´–ö
    currentLanguage = savedLanguage;
    
    // üåê –û–ë–ù–û–í–õ–Ø–ï–ú HTML LANG –ê–¢–†–ò–ë–£–¢
    document.documentElement.lang = savedLanguage;
    
    // üîÑ –ü–†–ò–ú–ï–ù–Ø–ï–ú –ü–ï–†–ï–í–û–î–´ –ò –û–ë–ù–û–í–õ–Ø–ï–ú –ò–ù–¢–ï–†–§–ï–ô–°
    updateLanguageSelector(savedLanguage);
    translateStaticInterface(savedLanguage);
    
    console.log(`üéâ –Ø–∑—ã–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: ${savedLanguage}`);
}

// === –£–°–ò–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–ï–†–ï–í–û–î–ê –°–¢–ê–¢–ò–ß–ï–°–ö–û–ì–û –ò–ù–¢–ï–†–§–ï–ô–°–ê ===
function translateStaticInterface(lang) {
    console.log(`üìù –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞: ${lang}`);
    
    let translatedCount = 0;
    
    // üìù –ü–ï–†–ï–í–û–î–ò–ú –û–°–ù–û–í–ù–û–ô –¢–ï–ö–°–¢ (data-translate)
    document.querySelectorAll('[data-translate]').forEach(element => {
        const key = element.getAttribute('data-translate');
        const translation = getTranslation(key, lang);
        
        if (translation && translation !== key) {
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
            if (element.children.length === 0) {
                element.textContent = translation;
            } else {
                updateTextNodes(element, translation);
            }
            translatedCount++;
        } else {
            console.warn(`‚ö†Ô∏è –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞: ${key}`);
        }
    });
    
    // üî§ –ü–ï–†–ï–í–û–î–ò–ú PLACEHOLDERS (data-translate-placeholder)
    document.querySelectorAll('[data-translate-placeholder]').forEach(element => {
        const key = element.getAttribute('data-translate-placeholder');
        const translation = getTranslation(key, lang);
        
        if (translation && translation !== key) {
            element.placeholder = translation;
            translatedCount++;
        } else {
            console.warn(`‚ö†Ô∏è Placeholder –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫–ª—é—á–∞: ${key}`);
        }
    });
    
    // üñºÔ∏è –ü–ï–†–ï–í–û–î–ò–ú ALT –ê–¢–†–ò–ë–£–¢–´ (data-translate-alt)
    document.querySelectorAll('[data-translate-alt]').forEach(element => {
        const key = element.getAttribute('data-translate-alt');
        const translation = getTranslation(key, lang);
        
        if (translation && translation !== key) {
            element.alt = translation;
            translatedCount++;
        }
    });
    
    // üí° –ü–ï–†–ï–í–û–î–ò–ú TITLE –ê–¢–†–ò–ë–£–¢–´ (data-translate-title)
    document.querySelectorAll('[data-translate-title]').forEach(element => {
        const key = element.getAttribute('data-translate-title');
        const translation = getTranslation(key, lang);
        
        if (translation && translation !== key) {
            element.title = translation;
            translatedCount++;
        }
    });
    
    // üìä –ü–ï–†–ï–í–û–î–ò–ú VALUE –ê–¢–†–ò–ë–£–¢–´ (data-translate-value)
    document.querySelectorAll('[data-translate-value]').forEach(element => {
        const key = element.getAttribute('data-translate-value');
        const translation = getTranslation(key, lang);
        
        if (translation && translation !== key) {
            element.value = translation;
            translatedCount++;
        }
    });
    
    console.log(`‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–∞ ${lang}. –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${translatedCount}`);
}

// === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø –¢–ï–ö–°–¢–û–í–´–• –£–ó–õ–û–í ===
function updateTextNodes(element, newText) {
    for (let node of element.childNodes) {
        if (node.nodeType === Node.TEXT_NODE && node.textContent.trim()) {
            node.textContent = newText;
            return; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª
        }
    }
    // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —É–∑–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    if (element.children.length === 0) {
        element.textContent = newText;
    }
}

// === –§–£–ù–ö–¶–ò–Ø –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–Ø DROPDOWN –Ø–ó–´–ö–û–í ===
function toggleLanguageDropdown() {
    const dropdown = document.getElementById('langDropdown');
    const arrow = document.querySelector('.dropdown-arrow');
    
    if (dropdown) dropdown.classList.toggle('show');
    if (arrow) arrow.classList.toggle('open');
}

// === –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –≠–ö–†–ê–ù–ò–†–û–í–ê–ù–ò–Ø HTML ===
function escapeHTML(unsafe) {
    if (typeof unsafe !== 'string') {
        unsafe = String(unsafe || '');
    }
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}

// === –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –≠–ö–†–ê–ù–ò–†–û–í–ê–ù–ò–Ø –î–õ–Ø DATA-–ê–¢–†–ò–ë–£–¢–û–í ===
function escapeDataAttribute(unsafe) {
    if (typeof unsafe !== 'string') {
        unsafe = String(unsafe || '');
    }
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;");
}

// === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï ===
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ i18n.js: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã');
    initializeLanguage();
});

// === –≠–ö–°–ü–û–†–¢ –î–õ–Ø –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø ===
window.i18n = {
    supportedLanguages,
    currentLanguage: () => currentLanguage,
    initializeLanguage,
    switchSiteLanguage,
    translateStaticInterface,
    getTranslation,
    toggleLanguageDropdown,
    updateLanguageSelector,
    // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    escapeHTML,
    escapeDataAttribute
};

// === –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô –≠–ö–†–ê–ù–ò–†–û–í–ê–ù–ò–Ø ===
window.escapeHTML = escapeHTML;
window.escapeDataAttribute = escapeDataAttribute;

// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï HELPER –§–£–ù–ö–¶–ò–ò –î–õ–Ø –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê (–ë–ï–ó–û–ü–ê–°–ù–´–ï) ===
window.getTitleByLanguage = function(titleObject, lang) {
    try {
        const title = typeof titleObject === 'string' ? JSON.parse(titleObject) : titleObject;
        const result = title[lang] || title.ru || title.en || '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
        return escapeHTML(result);
    } catch (e) {
        return escapeHTML(titleObject || '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ');
    }
};

window.getDescriptionByLanguage = function(descriptionObject, lang) {
    try {
        const description = typeof descriptionObject === 'string' ? JSON.parse(descriptionObject) : descriptionObject;
        const result = description[lang] || description.ru || description.en || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
        return escapeHTML(result);
    } catch (e) {
        return escapeHTML(descriptionObject || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ');
    }
};

window.getCategoryNameByLanguage = function(categoryObject, lang) {
    try {
        const category = typeof categoryObject === 'string' ? JSON.parse(categoryObject) : categoryObject;
        const result = category[lang] || category.ru || category.en || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';
        return escapeHTML(result);
    } catch (e) {
        return escapeHTML(categoryObject || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è');
    }
};

// === –ù–ï–ë–ï–ó–û–ü–ê–°–ù–´–ï –í–ï–†–°–ò–ò –î–õ–Ø –û–°–û–ë–´–• –°–õ–£–ß–ê–ï–í (–ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –û–°–¢–û–†–û–ñ–ù–û) ===
window.getTitleByLanguageRaw = function(titleObject, lang) {
    try {
        const title = typeof titleObject === 'string' ? JSON.parse(titleObject) : titleObject;
        return title[lang] || title.ru || title.en || '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
    } catch (e) {
        return titleObject || '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
    }
};

window.getDescriptionByLanguageRaw = function(descriptionObject, lang) {
    try {
        const description = typeof descriptionObject === 'string' ? JSON.parse(descriptionObject) : descriptionObject;
        return description[lang] || description.ru || description.en || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
    } catch (e) {
        return descriptionObject || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
    }
};

window.getCategoryNameByLanguageRaw = function(categoryObject, lang) {
    try {
        const category = typeof categoryObject === 'string' ? JSON.parse(categoryObject) : categoryObject;
        return category[lang] || category.ru || category.en || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';
    } catch (e) {
        return categoryObject || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';
    }
};

console.log('üì¶ i18n.js –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');