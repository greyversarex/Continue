Нужно реализовать личный кабинет для ТУРГИДОВ (guide cabinet), а также раздел “История туров” в админ‑панели.  

---

⚡ Авторизация тургидов:
1. Отдельная страница авторизации (например /guide/login).
2. Авторизация только по логину и паролю.
3. Аккаунты тургидов создаются администратором в админ‑панели (с логином/паролем).
4. После входа тургид попадает в свою панель управления (/guide/dashboard).

---

⚡ Кабинет тургида (dashboard):
1. На главной странице выводится список туров, которые назначены этому тургиду.
   • Каждый тур должен отображать:  
     - Уникальный номер тура (Тот же номер, что используется в “Истории туров”),  
     - Название тура,  
     - Кол-во туристов (данные из бронирований),  
     - Дата начала и дата завершения тура,  
     - Статус тура: ожидает / в процессе / завершён.
2. При клике на тур → открывается детальная страница тура.

---

⚡ Детальная страница тура для тургида:
1. В самом верху статус + кнопки управления:
   - Первое состояние → кнопка «Начать тур».  
   - После нажатия «Начать тур»:  
     • Кнопка исчезает,  
     • На её месте отображается индикатор статуса «Тур в процессе»,  
     • Ниже открывается БЛОК «Программа тура» (с данными, указанными админом при создании тура).  
   - Внизу программы появляется кнопка «Завершить тур».  
   - После нажатия «Завершить тур»:  
     • Статус меняется на «Тур завершён»,  
     • Появляется кнопка «Собрать отзывы».  

2. Кнопка «Собрать отзывы»:
   - Открывает список туристов этого тура (список подтягивается из бронирований тура).  
   - У каждого туриста должны быть: ФИО, Email, Телефон, чекбокс.  
   - Тургид отмечает галочками кого выбрать и запускает рассылку.  
   - По отмеченным туристам отправляется email с индивидуальной ссылкой для оставления отзыва.  
   - Это та же форма отзыва, которая существует для туристов (/review/:tourId).

3. Кнопка «Список туристов» всегда должна быть доступна:
   - При открытии тургид видит полный список всех туристов по бронированию этого тура.  

4. Кнопка «Программа тура»:
   - Показывает расписание тура (без привязки к статусу).  

5. Дополнительно: после завершения тура тургид видит ещё кнопку «Оставить отзыв»:
   - Форма с текстовым полем.  
   - Отзыв тургида сохраняется в систему, но доступен только администратору в разделе «История туров».  
   - Эти отзывы никогда не показываются публично.

---

⚡ Админ‑панель → раздел «История туров»:
1. Новый раздел «История туров» в меню админа.
2. Два подраздела:
   • Активные туры → те, на которые уже есть бронирования и статус «ожидает» или «в процессе».  
   • Завершённые туры → все туры со статусом «завершён».
3. В таблице туров показывать:
   - Уникальный номер тура,  
   - Название,  
   - Кол-во туристов (по бронированиям),  
   - Даты начала и завершения,  
   - Назначенный тургид,  
   - Статус.  
4. В завершённых турах — отдельная колонка «Отзыв тургида».  
5. При открытии карточки тура админ видит:
   - Основные данные тура,  
   - Назначенного тургида,  
   - Программу тура,  
   - Список бронирований,  
   - Туристов из бронирований,  
   - Отзывы туристов (собранные по рассылке),  
   - Отзыв тургида (если оставлял).

---

⚡ База данных (Prisma расширение):
model Tour {
  id             Int       @id @default(autoincrement())
  uniqueCode     String    @unique
  name           String
  startDate      DateTime
  endDate        DateTime
  status         String    @default("pending") // pending, active, finished
  assignedGuide  TourGuide? @relation(fields: [assignedGuideId], references: [id])
  assignedGuideId Int?
  bookings       Booking[]
  createdAt      DateTime  @default(now())
}

model TourGuide {
  id        Int        @id @default(autoincrement())
  name      String
  login     String     @unique
  password  String
  assignedTours Tour[]
  reviews   GuideReview[]
}

model GuideReview {
  id        Int        @id @default(autoincrement())
  tourId    Int
  guideId   Int
  content   String
  createdAt DateTime @default(now())
  tour      Tour      @relation(fields: [tourId], references: [id])
  guide     TourGuide @relation(fields: [guideId], references: [id])
}

---

⚡ API:
- POST /api/guide/login → авторизация тургида по логину и паролю.
- GET /api/guide/tours → список туров для тургида.
- GET /api/guide/tours/:id → детали тура.
- POST /api/guide/tours/:id/start → статус = active.
- POST /api/guide/tours/:id/finish → статус = finished.
- POST /api/guide/tours/:id/collect-reviews → отправка писем туристам.
- POST /api/guide/tours/:id/guide-review → оставить отзыв (только внутренняя панель).
- GET /api/admin/tours/history/active → список активных туров.
- GET /api/admin/tours/history/finished → список завершённых туров (с отзывами туристов и гидов).
- GET /api/admin/tours/:id → детали тура.

---

❗ Итог:
1. Тургиды логинятся по логину и паролю на отдельной странице.  
2. В кабинете видят список назначенных им туров (с уникальным номером, совпадающим с «Историей туров»).  
3. Для каждого тура можно: начать → тур в процессе (отображается программа тура) → завершить → собрать отзывы → оставить отзыв.  
4. В админ‑панели новый раздел «История туров», где есть подразделы «Активные» и «Завершённые», с отзывами тургидов и туристов.  
5. Все туристы подтягиваются по связке с бронированиями (Booking).  
6. Статусы тура последовательно фиксируются (pending → active → finished).  
7. Отзывы тургидов видны только администраторам.